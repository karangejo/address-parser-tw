# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities


def landMoi(city, town, road, lane, alley, number):
    # dictionary to store extracted information
    vars = {}

    # start the driver (this could be moved outside if called many times)
    driver = webdriver.Chrome('./chromedriver')

    # entry point
    driver.get("http://easymap.land.moi.gov.tw/")
    driver.set_window_size(911, 928)
    driver.find_element(By.LINK_TEXT, "進入系統").click()
    driver.find_element(By.ID, "button_addr").click()
    dropdown = driver.find_element(By.ID, "doorPlateTypeId")
    dropdown.find_element(By.XPATH, "//option[. = '戶政門牌']").click()
    element = driver.find_element(By.ID, "doorPlateTypeId")
    actions = ActionChains(driver)
    actions.move_to_element(element).click_and_hold().perform()
    element = driver.find_element(By.ID, "doorPlateTypeId")
    actions = ActionChains(driver)
    actions.move_to_element(element).perform()
    element = driver.find_element(By.ID, "doorPlateTypeId")
    actions = ActionChains(driver)
    actions.move_to_element(element).release().perform()
    driver.find_element(By.ID, "doorPlateTypeId").click()
    dropdown = driver.find_element(By.ID, "select_city_id1")

    # select city (must be exactly as found in the dropdown)
    dropdown.find_element(
        By.XPATH, "//option[. = '{1}']".format(str(city))).click()
    element = driver.find_element(By.ID, "select_city_id1")
    actions = ActionChains(driver)
    actions.move_to_element(element).click_and_hold().perform()
    element = driver.find_element(By.ID, "select_city_id1")
    actions = ActionChains(driver)
    actions.move_to_element(element).perform()
    element = driver.find_element(By.ID, "select_city_id1")
    actions = ActionChains(driver)
    actions.move_to_element(element).release().perform()

    # wait for page to load next options (time could be calibrated)
    time.sleep(5000)
    driver.find_element(By.ID, "select_city_id1").click()
    dropdown = driver.find_element(By.ID, "select_town_id1")

    # select town
    dropdown.find_element(
        By.XPATH, "//option[. = '{1}']".format(str(town))).click()
    element = driver.find_element(By.ID, "select_town_id1")
    actions = ActionChains(driver)
    actions.move_to_element(element).click_and_hold().perform()
    element = driver.find_element(By.ID, "select_town_id1")
    actions = ActionChains(driver)
    actions.move_to_element(element).perform()
    element = driver.find_element(By.ID, "select_town_id1")
    actions = ActionChains(driver)
    actions.move_to_element(element).release().perform()

    # wait for page to load
    time.sleep(5000)
    driver.find_element(By.ID, "select_town_id1").click()
    dropdown = driver.find_element(By.ID, "select_road_id")

    # select road
    dropdown.find_element(
        By.XPATH, "//option[. = '{1}']".format(str(road))).click()
    element = driver.find_element(By.ID, "select_road_id")
    actions = ActionChains(driver)
    actions.move_to_element(element).click_and_hold().perform()
    element = driver.find_element(By.ID, "select_road_id")
    actions = ActionChains(driver)
    actions.move_to_element(element).perform()
    element = driver.find_element(By.ID, "select_road_id")
    actions = ActionChains(driver)
    actions.move_to_element(element).release().perform()

    # wait for page to load
    time.sleep(5000)
    driver.find_element(By.ID, "select_road_id").click()
    dropdown = driver.find_element(By.ID, "select_lane_id")

    # select lane
    dropdown.find_element(
        By.XPATH, "//option[. = '{1}']".format(str(lane))).click()
    element = driver.find_element(By.ID, "select_lane_id")
    actions = ActionChains(driver)
    actions.move_to_element(element).click_and_hold().perform()
    element = driver.find_element(By.ID, "select_lane_id")
    actions = ActionChains(driver)
    actions.move_to_element(element).perform()
    element = driver.find_element(By.ID, "select_lane_id")
    actions = ActionChains(driver)
    actions.move_to_element(element).release().perform()

    # wait for page to load
    time.sleep(5000)
    driver.find_element(By.ID, "select_lane_id").click()
    dropdown = driver.find_element(By.ID, "select_alley_id")

    # select alley
    dropdown.find_element(
        By.XPATH, "//option[. = '{1}']".format(str(alley))).click()
    element = driver.find_element(By.ID, "select_alley_id")
    actions = ActionChains(driver)
    actions.move_to_element(element).click_and_hold().perform()
    element = driver.find_element(By.ID, "select_alley_id")
    actions = ActionChains(driver)
    actions.move_to_element(element).perform()
    element = driver.find_element(By.ID, "select_alley_id")
    actions = ActionChains(driver)
    actions.move_to_element(element).release().perform()
    driver.find_element(By.ID, "select_alley_id").click()
    driver.find_element(By.ID, "doorNoId").click()

    # enter door number
    driver.find_element(By.ID, "doorNoId").send_keys(str(number))
    driver.find_element(By.ID, "door_botton").click()
    element = driver.find_element(By.ID, "button_cada")
    actions = ActionChains(driver)
    actions.move_to_element(element).perform()

    # wait for page to load (this can take a while)
    time.sleep(15000)

    # extract some values a print them
    vars["extractedValue"] = driver.find_element(
        By.CSS_SELECTOR, "#one-column-emphasis tr:nth-child(1) > td").text
    print(vars["extractedValue"])
